upstream site {
  server localhost:81;
  server localhost:82;
  server localhost:83;
}

server{
  server_name intrinsic.asia;

  location / {
    proxy_pass http://site; # 将请求代理到本地的服务
    proxy_set_header Host $host; # 设置 Host 请求头为客户端请求的原始主机名
    proxy_set_header X-Real-IP $remote_addr; # 设置 X-Real-IP 请求头为客户端的真实 IP 地址
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 设置 X-Forwarded-For 请求头，包含客户端的 IP 地址和经过的代理服务器 IP 地址链
    proxy_set_header X-Forwarded-Proto $scheme; # 设置 X-Forwarded-Proto 请求头为客户端请求使用的协议（http 或 https）
  }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/intrinsic.asia/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/intrinsic.asia/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
  server_name stock.intrinsic.asia;

  # 前端
  location / {
      proxy_pass http://localhost:3001;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
  }

  # API 代理
  location /api/ {
      proxy_pass http://localhost:3000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
  }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/stock.intrinsic.asia/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/stock.intrinsic.asia/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server{
    if ($host = intrinsic.asia) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  server_name intrinsic.asia;
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = stock.intrinsic.asia) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  server_name stock.intrinsic.asia;
    listen 80;
    return 404; # managed by Certbot


}